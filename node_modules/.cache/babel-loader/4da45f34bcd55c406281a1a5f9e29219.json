{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"cuadrado\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"sup\", null, \"2\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createTextVNode(_toDisplayString(_ctx.$store.state.counter) + \" \", 1\n  /* TEXT */\n  ), _hoisted_2, _createTextVNode(\" = \" + _toDisplayString(_ctx.$store.getters.square), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;AACSA,OAAK,EAAC;;;gCACkBC,oBAAY,KAAZ,EAAY,IAAZ,EAAK,GAAL,EAAM;AAAA;AAAN;;;uBAD7BC,oBAEM,KAFN,cAEM,mCADAC,YAAOC,KAAP,CAAaC,WAAS,KAAC;AAAA;GACvB,EADuBC,UACvB,mBADmC,QAAGC,iBAAEJ,YAAOK,OAAP,CAAeC,MAAjB,GAAuB;AAAA;GAC7D,CAFN","names":["class","_createElementVNode","_createElementBlock","_ctx","state","counter","_hoisted_2","_toDisplayString","getters","square"],"sourceRoot":"","sources":["/home/elhacker/Documentos/LaunchX VueJS-VueX/vuejs-vuex-launchx/src/components/cuadrado.vue"],"sourcesContent":["<template>\n    <div class=\"cuadrado\">\n        {{$store.state.counter}} <sup>2</sup> = {{$store.getters.square}}\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'HomeView',\n    }\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}